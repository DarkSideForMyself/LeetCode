给定一种 pattern(模式) 和一个字符串 str ，判断 str 是否遵循相同的模式。

这里的遵循指完全匹配，例如， pattern 里的每个字母和字符串 str 中的每个非空单词之间存在着双向连接的对应模式。

示例1:

输入: pattern = "abba", str = "dog cat cat dog"
输出: true
示例 2:

输入:pattern = "abba", str = "dog cat cat fish"
输出: false
示例 3:

输入: pattern = "aaaa", str = "dog cat cat dog"
输出: false
示例 4:

输入: pattern = "abba", str = "dog dog dog dog"
输出: false
说明:
你可以假设 pattern 只包含小写字母， str 包含了由单个空格分隔的小写字母。 


class Solution {
    public boolean wordPattern(String pattern, String str) {
        //类似的题目之前出现过，一直没有理解为什么用hashtable，回头好好看看
        String[] words = str.split(" ");
        HashMap<Character, String> map = new HashMap<Character, String>();
        HashSet<String> set = new HashSet<String>();
        if(words.length != pattern.length()){
            return false;
        }
        for(int i = 0; i < words.length; i++){
            //就这句不理解，为什么要用containsKey，比如aabb式的，或者abab式的，那怎么区分？
            if(map.containsKey(pattern.charAt(i))){
                if(!map.get(pattern.charAt(i)).equals(words[i])){
                    return false;
                }
            }else{
                if(map.containsValue(words[i])){
                    return false;
                }
                //这道题题干式“单词模式”，也就是并不是判断a == a这种，为什么能用hashmap？？？
                map.put(pattern.charAt(i), words[i]);
            }
        }
        
        return true;
    }
}
